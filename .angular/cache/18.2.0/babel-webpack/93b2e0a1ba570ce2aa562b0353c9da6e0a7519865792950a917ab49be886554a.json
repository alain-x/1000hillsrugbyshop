{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddproductComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction AddproductComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(cat_r2.name);\n  }\n}\nexport let AddproductComponent = /*#__PURE__*/(() => {\n  class AddproductComponent {\n    apiService;\n    router;\n    constructor(apiService, router) {\n      this.apiService = apiService;\n      this.router = router;\n    }\n    image = null;\n    categories = [];\n    categoryId = null;\n    name = '';\n    description = '';\n    price = '';\n    message = '';\n    ngOnInit() {\n      this.apiService.getAllCategory().subscribe({\n        next: response => {\n          this.categories = response.categoryList || [];\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n    handleImage(event) {\n      const input = event.target;\n      if (input.files && input.files.length > 0) {\n        this.image = input.files[0];\n      }\n    }\n    handleSubmit() {\n      if (!this.image || !this.categoryId || !this.name || !this.description || !this.price) {\n        this.message = \"Please fill in all fields\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append('image', this.image);\n      formData.append('categoryId', this.categoryId.toString());\n      formData.append('name', this.name);\n      formData.append('description', this.description);\n      formData.append('price', this.price);\n      this.apiService.addProduct(formData).subscribe({\n        next: res => {\n          this.message = res.message;\n          setTimeout(() => {\n            this.router.navigate(['/admin/products']);\n          }, 3000);\n        },\n        error: error => {\n          console.log(error);\n          this.message = error?.error?.message || \"Unable to save a product\";\n        }\n      });\n    }\n    static ɵfac = function AddproductComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AddproductComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddproductComponent,\n      selectors: [[\"app-addproduct\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 15,\n      vars: 6,\n      consts: [[3, \"submit\"], [\"class\", \"message\", 4, \"ngIf\"], [\"type\", \"file\", 3, \"change\"], [\"name\", \"category\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Product name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"placeholder\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"price\", \"name\", \"price\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [1, \"message\"], [3, \"value\"]],\n      template: function AddproductComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n          i0.ɵɵlistener(\"submit\", function AddproductComponent_Template_form_submit_1_listener() {\n            return ctx.handleSubmit();\n          });\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Add Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, AddproductComponent_p_4_Template, 2, 1, \"p\", 1);\n          i0.ɵɵelementStart(5, \"input\", 2);\n          i0.ɵɵlistener(\"change\", function AddproductComponent_Template_input_change_5_listener($event) {\n            return ctx.handleImage($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddproductComponent_Template_select_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.categoryId, $event) || (ctx.categoryId = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(7, \"option\", 4);\n          i0.ɵɵtext(8, \"Select Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, AddproductComponent_option_9_Template, 2, 2, \"option\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddproductComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.name, $event) || (ctx.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"textarea\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddproductComponent_Template_textarea_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.description, $event) || (ctx.description = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AddproductComponent_Template_input_ngModelChange_12_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.price, $event) || (ctx.price = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 9);\n          i0.ɵɵtext(14, \"Add Product\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.categoryId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.name);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.description);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.price);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf, FormsModule, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\"form[_ngcontent-%COMP%]{max-width:500px;margin:10px auto;padding:20px;border:1px solid #ccc;border-radius:5px}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;color:#555}input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:10px;margin:10px 0;border:1px solid #ccc;border-radius:3px;box-sizing:border-box}input[type=file][_ngcontent-%COMP%]{margin:10px 0}button[_ngcontent-%COMP%]{width:100%;padding:15px;background-color:#f68b1e;border:none;border-radius:3px;color:#fff;font-size:16px;cursor:pointer;margin-top:20px}.message[_ngcontent-%COMP%]{margin-bottom:15px;padding:10px;border-radius:3px;color:#f68b1e;text-align:center}button[_ngcontent-%COMP%]:hover{background-color:#b18961}\"]\n    });\n  }\n  return AddproductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}