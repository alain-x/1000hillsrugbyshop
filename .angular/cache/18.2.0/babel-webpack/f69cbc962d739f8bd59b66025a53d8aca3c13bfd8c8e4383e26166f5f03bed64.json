{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction EditcategoryComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nexport let EditcategoryComponent = /*#__PURE__*/(() => {\n  class EditcategoryComponent {\n    apiService;\n    router;\n    fb;\n    route;\n    categoryForm;\n    message = null;\n    categoryId = '';\n    constructor(apiService, router, fb, route) {\n      this.apiService = apiService;\n      this.router = router;\n      this.fb = fb;\n      this.route = route;\n      this.categoryForm = this.fb.group({\n        name: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.categoryId = this.route.snapshot.paramMap.get(\"categoryId\") || '';\n      this.fetchCategoryById();\n    }\n    fetchCategoryById() {\n      if (this.categoryId) {\n        this.apiService.getCategoryById(this.categoryId).subscribe({\n          next: response => {\n            this.categoryForm.patchValue({\n              name: response.category.name\n            });\n          },\n          error: error => {\n            console.log(error);\n            this.message = error?.error?.message || \"unable to get categoty by id\";\n            setTimeout(() => {\n              this.message = null;\n            }, 3000);\n          }\n        });\n      }\n    }\n    handleSubmit() {\n      if (this.categoryForm.valid) {\n        this.apiService.updateCategory(this.categoryId, this.categoryForm.value).subscribe({\n          next: response => {\n            if (response.status === 200) {\n              this.message = \"Category successfully Updated\";\n              setTimeout(() => {\n                this.message = null;\n                this.router.navigate(['/admin/categories']);\n              }, 3000);\n            }\n          },\n          error: error => {\n            console.log(error);\n            this.message = error?.error?.message || \"unable to update Category\";\n          }\n        });\n      }\n    }\n    static ɵfac = function EditcategoryComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EditcategoryComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditcategoryComponent,\n      selectors: [[\"app-editcategory\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 5,\n      consts: [[4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"text\", \"placeholder\", \"Category name\", \"formControlName\", \"name\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function EditcategoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵtemplate(1, EditcategoryComponent_p_1_Template, 2, 1, \"p\", 0);\n          i0.ɵɵelementStart(2, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function EditcategoryComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.handleSubmit();\n          });\n          i0.ɵɵelementStart(3, \"h2\");\n          i0.ɵɵtext(4, \"Update Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 2);\n          i0.ɵɵelementStart(6, \"button\", 3);\n          i0.ɵɵtext(7, \" Update Category\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"invalid\", ((tmp_2_0 = ctx.categoryForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.categoryForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.categoryForm.invalid);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, CommonModule, i4.NgIf],\n      styles: [\"div[_ngcontent-%COMP%]{padding:20px;max-width:500px;margin:auto}p[_ngcontent-%COMP%]{margin-bottom:20px;color:#f68b1e}h2[_ngcontent-%COMP%]{font-size:2rem;margin-bottom:20px}input[_ngcontent-%COMP%]{width:95%;padding:10px;margin-bottom:10px;border:1px solid #ccc;border-radius:5px}input.invalid[_ngcontent-%COMP%]{border-color:red}button[_ngcontent-%COMP%]{padding:10px 15px;background-color:#f68b1e;color:#fff;border:none;border-radius:5px;cursor:pointer;font-size:20px;width:100%;margin:auto}button[_ngcontent-%COMP%]:disabled{background-color:#aaa}\"]\n    });\n  }\n  return EditcategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}