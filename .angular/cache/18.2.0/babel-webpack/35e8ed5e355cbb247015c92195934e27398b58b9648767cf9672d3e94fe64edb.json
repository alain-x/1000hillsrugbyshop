{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction EditproductComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction EditproductComponent_img_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction EditproductComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", cat_r2.name, \"\");\n  }\n}\nexport let EditproductComponent = /*#__PURE__*/(() => {\n  class EditproductComponent {\n    apiService;\n    router;\n    route;\n    fb;\n    editProductForm;\n    categories = [];\n    message = null;\n    imageUrl = null;\n    productId = '';\n    constructor(apiService, router, route, fb) {\n      this.apiService = apiService;\n      this.router = router;\n      this.route = route;\n      this.fb = fb;\n    }\n    ngOnInit() {\n      this.productId = this.route.snapshot.paramMap.get('productId') || '';\n      this.editProductForm = this.fb.group({\n        image: [null],\n        categoryId: [''],\n        name: [''],\n        description: [''],\n        price: ['']\n      });\n      this.apiService.getAllCategory().subscribe(res => {\n        this.categories = res.categoryList;\n      });\n      if (this.productId) {\n        this.apiService.getProductById(this.productId).subscribe(res => {\n          this.editProductForm.patchValue({\n            categoryId: res.product.categoryId,\n            name: res.product.name,\n            description: res.product.description,\n            price: res.product.price\n          });\n          this.imageUrl = res.product.imageUrl;\n        });\n      }\n    }\n    handleImageChange(event) {\n      const input = event.target;\n      if (input.files && input.files[0]) {\n        const file = input.files[0];\n        this.editProductForm.patchValue({\n          image: file\n        });\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.imageUrl = reader.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n    handleSubmit() {\n      const formData = new FormData();\n      const formValues = this.editProductForm.value;\n      if (formValues.image) {\n        formData.append('image', formValues.image);\n      }\n      formData.append('productId', this.productId);\n      formData.append('categoryId', formValues.categoryId);\n      formData.append('name', formValues.name);\n      formData.append('description', formValues.description);\n      formData.append('price', formValues.price);\n      console.log(\"Product ID: \" + this.productId);\n      console.log(\"categoryId ID: \" + formValues.categoryId);\n      console.log(\"NAme : \" + formValues.name);\n      console.log(\"Des : \" + formValues.description);\n      console.log(\"Price: \" + formValues.price);\n      this.apiService.updateProduct(formData).subscribe({\n        next: res => {\n          this.message = res.message;\n          setTimeout(() => {\n            this.message = '';\n            this.router.navigate(['/admin/products']);\n          }, 3000);\n        },\n        error: error => {\n          console.log(error);\n          this.message = error?.error?.message || \"Unable to update a product\";\n        }\n      });\n    }\n    static ɵfac = function EditproductComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EditproductComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditproductComponent,\n      selectors: [[\"app-editproduct\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 21,\n      vars: 4,\n      consts: [[3, \"ngSubmit\", \"formGroup\"], [\"class\", \"message\", 4, \"ngIf\"], [\"type\", \"file\", 3, \"change\"], [\"alt\", \"produt name\", 3, \"src\", 4, \"ngIf\"], [\"formControlName\", \"categoryId\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Produt Name\"], [\"formControlName\", \"description\", \"placeholder\", \"Description\"], [\"formControlName\", \"price\", \"type\", \"number\", \"placeholder\", \"Price\"], [\"type\", \"submit\"], [1, \"message\"], [\"alt\", \"produt name\", 3, \"src\"], [3, \"value\"]],\n      template: function EditproductComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function EditproductComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.handleSubmit();\n          });\n          i0.ɵɵelementStart(1, \"h2\");\n          i0.ɵɵtext(2, \"Edit Ptoduct\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, EditproductComponent_p_3_Template, 2, 1, \"p\", 1);\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵlistener(\"change\", function EditproductComponent_Template_input_change_4_listener($event) {\n            return ctx.handleImageChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, EditproductComponent_img_5_Template, 1, 1, \"img\", 3);\n          i0.ɵɵelementStart(6, \"select\", 4)(7, \"option\", 5);\n          i0.ɵɵtext(8, \"Select Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, EditproductComponent_option_9_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\", 7);\n          i0.ɵɵtext(11, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 8);\n          i0.ɵɵelementStart(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"textarea\", 9);\n          i0.ɵɵelementStart(16, \"label\", 7);\n          i0.ɵɵtext(17, \"Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 10);\n          i0.ɵɵelementStart(19, \"button\", 11);\n          i0.ɵɵtext(20, \"Update\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.editProductForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.imageUrl);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        }\n      },\n      dependencies: [CommonModule, i4.NgForOf, i4.NgIf, ReactiveFormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"form[_ngcontent-%COMP%]{max-width:500px;margin:2rem auto 9.5rem;padding:20px;border:1px solid #eee;border-radius:5px}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;color:#333}img[_ngcontent-%COMP%]{max-width:100px;margin:10px 0}input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:10px;margin:10px 0;border:1px solid #eee;border-radius:3px;box-sizing:border-box}input[type=file][_ngcontent-%COMP%]{margin:10px 0}button[_ngcontent-%COMP%]{width:100%;padding:15px;background-color:#f68b1e;border:none;border-radius:3px;color:#fff;font-size:18px;cursor:pointer;margin-top:20px}.message[_ngcontent-%COMP%]{margin-bottom:15px;padding:10px;border-radius:3px;color:#f68b1e;text-align:center}button[_ngcontent-%COMP%]:hover{background-color:#b18961}\"]\n    });\n  }\n  return EditproductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}