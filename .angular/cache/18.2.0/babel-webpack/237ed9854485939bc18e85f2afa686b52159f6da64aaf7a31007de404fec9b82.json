{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    cart = [];\n    constructor() {\n      const savedCart = localStorage.getItem('cart');\n      this.cart = savedCart ? JSON.parse(savedCart) : [];\n    }\n    getCart() {\n      return this.cart;\n    }\n    getCartItem(itemId) {\n      return this.cart.find(cartItem => cartItem.id === itemId);\n    }\n    saveCart() {\n      localStorage.setItem('cart', JSON.stringify(this.cart));\n    }\n    addItem(item) {\n      const existingItem = this.getCartItem(item.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        this.cart.push({\n          ...item,\n          quantity: 1\n        });\n      }\n      this.saveCart();\n    }\n    removeItem(itemId) {\n      this.cart = this.cart.filter(item => item.id !== itemId);\n      this.saveCart();\n    }\n    decrementItem(itemId) {\n      const item = this.getCartItem(itemId);\n      if (item && item.quantity > 1) {\n        item.quantity -= 1;\n        this.saveCart();\n      } else {\n        this.removeItem(itemId);\n      }\n    }\n    clearCart() {\n      this.cart = [];\n      localStorage.removeItem('cart');\n    }\n    incrementItem(itemId) {\n      const item = this.cart.find(i => i.id === itemId);\n      if (item) item.quantity++;\n    }\n    static ɵfac = function CartService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CartService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}